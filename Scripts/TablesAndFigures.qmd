---
title: " "
format:
  docx
execute:
  echo: false
---
```{r, warning=FALSE, results='hide', cache.comments=FALSE, message=FALSE}
library("magrittr")
library("dplyr")
library("flextable")
library("ggplot2")
library("png")
library("knitr")
library("here")
pathData    <- "D:/Projects/PDE5_AD_MendelianRandomisation/"
pathResults <- paste0(pathData,"Results/")
```
**Table 1.** Single nucleotide polymporphisms selected as instruments for phosphodiesterase 5 (PDE5) inhibition in the Mendelian randomization analysis. *Note:* CHR = Chromosome, EA = Effect allele, OA = Other allele, EAF = Effect allele frequency, SE = Standard error, N = Number of individuals.
```{r, warning=FALSE, cache.comments=FALSE, message=FALSE}
# Table 1
iv <- read.table(paste0(pathResults,"InstrumentSelection/iv_DBP.txt"))

Table1 <- iv %>%
  dplyr::relocate(SNP) %>%
  dplyr::arrange(pval.exposure) %>%
  dplyr::mutate(
   EA   = dplyr::if_else(beta.exposure < 0, effect_allele.exposure, other_allele.exposure),
   OA   = dplyr::if_else(beta.exposure < 0, other_allele.exposure, effect_allele.exposure),
   EAF  = dplyr::if_else(beta.exposure < 0, eaf.exposure, 1-eaf.exposure),
   Beta = dplyr::if_else(beta.exposure < 0, beta.exposure, -beta.exposure)
  ) %>%
  dplyr::select("SNP"  = "SNP",
                "CHR"  = "chr",
                "Position (GRCh19/hg37)" = "pos",
                "EA",
                "OA",
                "EAF"  = "eaf.exposure",
                "Beta",
                "SE"   = "se.exposure",
                "N"    = "samplesize.exposure",
                "PValue" = "pval.exposure") %>%
  dplyr::mutate(
    EAF  = round(EAF, digits = 2),
    Beta = round(Beta, digits = 2),
    SE   = round(SE, digits = 2),
    PValue = formatC(PValue, digits = 1, format = "e")
  ) %>%
  dplyr::rename("Beta (mmHg)" = "Beta") %>%
  flextable::flextable() %>%
  flextable::align(j = c(2:10), align = "center", part = "all") %>%
  flextable::bold(i = 1, bold = TRUE, part = "header")

Table1
```

**Table 2.** Colocalization results.
```{r, warning=FALSE, cache.comments=FALSE, message=FALSE}
Table2 <- read.table(paste0(pathResults,"Colocalisation/colocalisation.txt"), header = TRUE) |>
  rename("Outcome" = "outcome") |>
  filter(Outcome == "Lambert") |>
  relocate(Outcome) |>
  relocate(P1, .after = nsnps) |>
  relocate(P2, .after = P1) |>
  relocate(P12, .after = P2) |>
  mutate_at(vars(starts_with("H")), funs(. * 100)) |>
  mutate_at(vars(starts_with("H")), funs(round(.,digits = 2))) |>
  mutate_at(vars(starts_with("H")), funs(as.character)) |>
  mutate_at(vars(starts_with("H")), funs(if_else(.=="0","<1",.))) |>
  select(-"exposure") |>
  rename_at(vars(starts_with("P")), funs(paste0(.," (%)"))) |>
  rename_at(vars(starts_with("H")), funs(paste0(.," (%)"))) |>
  flextable() |>
  ftExtra::span_header(sep = "_") %>%
  flextable::align(align = "center", part = "all") %>%
  flextable::bold(i = c(1), bold = TRUE, part = "header") %>%
  flextable::vline(j = c(2,5))

Table2
```

**Supplementary table 1. ** Linkage disequilibrium matrix of the instruments used for the Mendelian randomization analysis. Notice that values correspond to r (not r2).
```{r, warning=FALSE, cache.comments=FALSE, message=FALSE}
# Supplementary table 1
iv <- read.table(paste0(pathResults,"InstrumentSelection/ld_matrix.txt")) %>%
  as.data.frame() %>%
  dplyr::rename("rs10050092 (C/T)" = "rs10050092_C_T",
                "rs12646525 (T/C)" = "rs12646525_T_C",
                "rs17355550 (C/T)" = "rs17355550_C_T",
                "rs66887589 (C/T)" = "rs66887589_C_T",
                "rs80223330 (A/G)" = "rs80223330_A_G") %>%
  dplyr::mutate(`rs10050092 (C/T)` = round(`rs10050092 (C/T)`, digits = 2),
                `rs12646525 (T/C)` = round(`rs12646525 (T/C)`, digits = 2),
                `rs17355550 (C/T)` = round(`rs17355550 (C/T)`, digits = 2),
                `rs66887589 (C/T)` = round(`rs66887589 (C/T)`, digits = 2),
                `rs80223330 (A/G)` = round(`rs80223330 (A/G)`, digits = 2))
STable1 <- iv %>%
  dplyr::mutate(SNP = colnames(iv)) %>%
  dplyr::relocate(SNP) %>%
  flextable::flextable() %>%
  flextable::bold(i = 1, bold = TRUE, part = "header") %>%
  flextable::bold(j = 1, bold = TRUE, part = "body") %>%
  flextable::align(part = "all", align = "center") %>%
  flextable::vline(j = 1)

STable1
```

**Supplementary Table 2.** Harmonized variants respect the alleles of the linkage disequilibrium matrix. *Note:* EA = Effect allele, OA = Other allele, SE = Standard error, EAF = Effect allele frequency.
```{r, warning=FALSE, cache.comments=FALSE, message=FALSE}
#Supplementary table 2
tab <- read.table(paste0(pathResults,"MR_Results/harmonised_DBP.txt"), header = TRUE) %>%
  dplyr::filter(outcome == "Lambert") %>%
  dplyr::distinct() %>%
  dplyr::mutate(
    beta.exposure = round(beta.exposure, digits = 2),
    beta.outcome  = round(beta.outcome, digits = 2),
    se.exposure   = round(se.exposure, digits = 2),
    se.outcome    = round(se.outcome, digits = 2),
    pval.exposure = formatC(pval.exposure, digits = 1, format = "e"),
    pval.outcome  = formatC(pval.outcome, digits = 1, format = "e"),
    eaf.exposure  = round(eaf.exposure, digits = 2),
    eaf.outcome   = round(eaf.outcome, digits = 2)
  ) %>%
  dplyr::select("SNP","EA" = "effect_allele", "OA" = "other_allele",
                "Beta_Exposure" = "beta.exposure",
                "Beta_Outcome"  = "beta.outcome",
                "SE_Exposure"   = "se.exposure",
                "SE_Outcome"    = "se.outcome",
                "EAF_Exposure"  = "eaf.exposure",
                "EAF_Outcome"   = "eaf.outcome",
                "PValue_Exposure" = "pval.exposure",
                "PValue_Outcome"  = "pval.outcome")
STable2 <- tab %>%
  flextable::flextable() %>%
  ftExtra::span_header(sep = "_") %>%
  flextable::align(align = "center", part = "all") %>%
  flextable::bold(i = c(1,2), bold = TRUE, part = "header") %>%
  flextable::vline(j = seq(3,10,2))

STable2
```

**Supplementary Table 3. **Results of the two-step *cis*-Mendelian randomisation analysis.
```{r, warning=FALSE, cache.comments=FALSE, message=FALSE}
tab_twostep <- read.table(paste0(pathResults,"TwoStepMR/twostepMR.txt"), header = TRUE) |>
  dplyr::filter(outcome == "Lambert") %>%
  dplyr::distinct() %>%
  dplyr::relocate(outcome) %>%
  dplyr::mutate("Confounder" = dplyr::case_when(
    confounder == "ukb-b-19953" ~ "BMI",
    confounder == "ukb-b-7376"  ~ "Impedance of leg (right)",
    confounder == "ukb-b-14068" ~ "Impedance of leg (left)",
    confounder == "ukb-b-7859"  ~ "Impedance of arm (right)",
    confounder == "ukb-b-19379" ~ "Impedance of arm (left)",
    confounder == "ukb-b-19921" ~ "Impedance of whole body",
    confounder == "ukb-b-10787" ~ "Standing height",
    confounder == "ebi-a-GCST004607" ~ "Plateletcrit",
    confounder == "ebi-a-GCST004626" ~ "Myeloid white cell count",
    confounder == "ukb-d-30080_irnt" ~ "Platelet count",
    confounder == "ieu-b-30" ~ "White blood cell count",
    confounder == "ebi-a-GCST005195" ~ "Coronary artery disease",
    confounder == "ebi-a-GCST004614" ~ "Granulocyte count",
    confounder == "ebi-a-GCST004620" ~ "Sum basophil neutrophil counts"
  )) %>%
  dplyr::arrange(Confounder) %>%
  dplyr::rename("GWAS ID" = "confounder",
                "Outcome" = "outcome") %>%
  dplyr::mutate("Associated SNPs" = dplyr::case_when(
    Confounder == "BMI" ~ " ",
    Confounder == "Impedance of leg (right)"       ~ "rs10050092, rs12646525",
    Confounder == "Impedance of leg (left)"        ~ "rs10050092, rs12646525",
    Confounder == "Impedance of arm (right)"       ~ "rs10050092",
    Confounder == "Impedance of arm (left)"        ~ "rs10050092",
    Confounder == "Impedance of whole body"        ~ "rs10050092",
    Confounder == "Standing height"                ~ "rs10050092",
    Confounder == "Plateletcrit"                   ~ "rs66887589",
    Confounder == "Myeloid white cell count"       ~ "rs10050092, rs66887589",
    Confounder == "Platelet count"                 ~ "rs10050092",
    Confounder == "White blood cell count"         ~ "rs66887589",
    Confounder == "Coronary artery disease"        ~ "rs66887589, rs80223330",
    Confounder == "Granulocyte count"              ~ "rs66887589",
    Confounder == "Sum basophil neutrophil counts" ~ "rs66887589")
  ) %>%
  dplyr::relocate("Confounder", .after = "Outcome") %>%
  dplyr::relocate("GWAS ID",    .after = "Confounder") %>%
  dplyr::relocate("Associated SNPs", .after = "GWAS ID") %>%
  dplyr::mutate(OR = round(exp(beta_IVWcorrel), digits = 2)) %>%
  dplyr::mutate(SE = round(se_IVWcorrel.random, digits = 2)) %>%
  dplyr::mutate(`P-Value` = round(p_IVWcorrel.random, digits = 2)) %>%
  dplyr::select(-tidyselect::contains("IVWcorrel"), -n_snp, -F_stat, -exposure)

STable3 <- tab_twostep |>
  flextable::flextable() %>%
  flextable::bold(bold = TRUE, part = "header") %>%
  flextable::align(align = c("center"), part = "all")

STable3
```
**Supplementary Table 4.** Results of the leave-one-out analysis
```{r, warning=FALSE, cache.comments=FALSE, message=FALSE}
STable4 <- read.table(paste0(pathResults,"LeaveOneOutAnalysis/LeaveOneOut_Results_DBP.txt"),
                  header = TRUE) |>
  arrange(desc(instruments)) |>
  select("SNP", "N Instruments" = "instruments", "OR", "se","P-value" = "pval") |>
  mutate_at(vars(c("se","P-value")), funs(round(.,digits = 2))) |>
  mutate_at(vars(c("OR","P-value")), funs(round(.,digits = 3))) |>
  flextable() |>
  ftExtra::span_header(sep = "_") %>%
  flextable::align(align = "center", part = "all") %>%
  flextable::bold(i = c(1), bold = TRUE, part = "header")
STable4
```

```{r, warning=FALSE, cache.comments=FALSE, message=FALSE}
tab1 <- tibble(
  "Outcome" = "Lambert",
  "Confounder" = "Main",
  "GWAS ID" = "",
  "Associated SNPs" = "",
  "OR" = read.table(paste0(pathResults,"MR_Results/MR_Results_DBP_scaled.txt"), header = TRUE) |>
    filter(outcome == "Lambert") |> pull(OR),
  "SE" = read.table(paste0(pathResults,"MR_Results/MR_Results_DBP_scaled.txt"), header = TRUE) |>
    filter(outcome == "Lambert") |> pull(se),
  "P-Value" = read.table(paste0(pathResults,"MR_Results/MR_Results_DBP_scaled.txt"), header = TRUE) |> filter(outcome == "Lambert")
) |>
  union_all(tab_twostep) |>
  mutate(n_row = max(row_number()) - row_number()) |>
  mutate(low  = exp(log(OR)-1.96*SE),
         high = exp(log(OR)+1.96*SE)) |>
  distinct() |>
  arrange(n_row) |>
  mutate(color = if_else(n_row == 14, 1, 2))

p1 <- ggplot(data = tab1, aes(x = OR, y = n_row, colour = as.factor(color))) +
 geom_vline(xintercept = 1, color = "red", linetype = "dashed", cex = 0.75, alpha = 0.75) +
  geom_vline(xintercept = 1.0011524, color = "black", linetype = "dashed", cex = 0.75) +
   geom_point(shape = 15, size = 2) +
  geom_errorbarh(aes(xmin = low, xmax = high), height = 0) +
  scale_y_continuous(name = "", breaks=0:14, labels = tab1$Confounder) +
  scale_colour_manual(values = c("black","#5B9BD5")) +
  theme(
    legend.position = "none"
  )
ggsave(
  here::here("Figures/Sfigure1.png"), plot = p1,
  scale = 1, width = 14, height = 15, units = "cm", dpi = 300
)

knitr::include_graphics(here::here("Figures/Sfigure1.png"))


```
**Supplementary Figure 1.** Results of Two-Step *cis*-Mendelian Randomisation.

```{r, warning=FALSE, cache.comments=FALSE, message=FALSE}
tab <- read.table(paste0(pathResults,"LeaveOneOutAnalysis/LeaveOneOut_Results_DBP.txt"),
                  header = TRUE) |>
  mutate(n_row = row_number()) |>
  mutate(color = if_else(n_row == 6, 1,2)) |>
  mutate(SNP = if_else(SNP == "All", "Main", SNP))
  
p1 <- ggplot(data = tab, aes(x = OR, y = n_row, colour = as.factor(color))) +
  geom_vline(xintercept = 1, color = "red", linetype = "dashed", cex = 0.75, alpha = 0.75) +
  geom_vline(xintercept = 1.0011524, color = "black", linetype = "dashed", cex = 0.75) +
   geom_point(shape = 15, size = 2) +
  geom_errorbarh(aes(xmin = cilow, xmax = cihigh), height = 0) +
  scale_y_continuous(name = "", breaks=1:6, labels = tab$SNP) +
  scale_x_continuous(limits = c(0.92,1.08)) +
  scale_colour_manual(values = c("black","#5B9BD5")) +
  theme(
    legend.position = "none"
  )
ggsave(
  here::here("Figures/Sfigure2.png"), plot = p1, scale = 1, width = 14,
  height = 15, units = "cm", dpi = 300
)

file.copy(here("Figures/Sfigure2.png"), here("Scripts/Sfigure2.png"))
knitr::include_graphics(here::here("Figures/Sfigure2.png"))
file.remove(here("Scripts/Sfigure2.png"))
```
**Supplementary Figure 2. ** Results of leave-one-out analysis.

```{r, warning=FALSE, cache.comments=FALSE, message=FALSE}
dat <- read.table(paste0(pathResults,"MR_Results/MR_Results_DBP_scaled.txt"), header = TRUE) %>%
  distinct() |>
  dplyr::relocate(outcome) %>%
  dplyr::rename("Study" = "outcome") %>%
  dplyr::mutate("Estimate (95% CI)" = paste0(round(OR, digits = 2),
                                             " (",
                                             round(cilow, digits = 2),
                                             "-",
                                             round(cihigh, digits = 2),
                                             ")"),
                Estimate = round(OR, digits = 2),
                `P value`   = round(pval, digits = 2),
                Instruments = as.character(instruments),
                num = 1) |>
  mutate(N = c("54,162","398,108","409,435","487,511"),
         cases = c("17,008 (31)","39,968 (10)","81,611 (20)","85,934 (18)"))

# Colors for the plot
colp <- "#1D5197"
coll <- "#a7a9ac"

k <- nrow(dat)

### generate point sizes
psize <- 1.2

### get the weights and format them as will be used in the forest plot
weights <- 1

grDevices::png(filename=here::here("Figures/Sfigure3.png"), width=16, height=7, units = "cm", res = 600)

### adjust the margins
par(mai = c(.5,0,0,0),  mgp = c(3,-.1,0), tcl=0.15)

### forest plot with extra annotation
p <- metafor::forest(dat$OR, ci.lb = dat$cilow, ci.ub = dat$cihigh,
                      lty=c(1,0), annotate = FALSE, xlim = c(0,1.7),
                      alim = c(0.8, 1.1), ylim = c(0.9, k + 0.8),
                      cex.axis = 0.7, cex = 0.95, xlab = c(""), efac = 0,
                      refline = NA, rowadj = -1,
                      ilab = cbind(dat$Study, dat$N,  dat$cases, 
                                   dat$`Estimate (95% CI)`, dat$`P value`),
                      at = c(0.8,0.9,1,1.1), psize = 1, slab = NA,
                      ilab.xpos = c(0.15, 0.4, 0.65, 1.3, 1.55))
segments(x0 = 1, x1 = 1, y0 = -1, y1 = 1.15+k-0.75, col = coll) # Reference line at 1
segments(rev(dat$cilow), 1:4, rev(dat$cihigh), 1:4, col=colp, lwd=1.5)
points(rev(dat$OR), 1:4, cex=0.95, col=colp, pch = 15)
abline(h=0.5+k, col=coll)

### add headings
par(cex=p$cex, font=2)
text(p$ilab.xpos[1], k+.7, pos = NULL, "Study")
text(p$ilab.xpos[2], k+.7, c("Sample size"))
text(p$ilab.xpos[3], k+.7, c("Cases (%)"))
text(p$ilab.xpos[4], k+.7, c("OR (95% CI)"))
text(p$ilab.xpos[5], k+.7, c("P-Value"))
par(cex=0.7, font=1)
par(xpd=NA)

# xlabel
text(1, .25, c("Odds ratio per 100mg descrease of PDE5"), pos=NULL, offset=-0.3)
print(getwd())

file.copy(here("Figures/Sfigure3.png"), here("Scripts/Sfigure3.png"))
knitr::include_graphics("Sfigure3.png")
file.remove(here("Scripts/Sfigure3.png"))
```
**Supplementary Figure 3. **Mendelian randomization results with other Alzheimer's disease GWAS.

```{r, warning=FALSE, cache.comments=FALSE, message=FALSE}
dat <- read.table(paste0(pathResults,"MR_Results/MR_Results_DBP_scaled.txt"), header = TRUE) %>%
  dplyr::filter(outcome == "Lambert") %>%
  dplyr::relocate(outcome) %>%
  dplyr::rename("Study" = "outcome") %>%
  dplyr::mutate("Estimate (95% CI)" = paste0(round(OR, digits = 2),
                                             ".00 (",
                                             round(cilow, digits = 2),
                                             "-",
                                             round(cihigh, digits = 2),
                                             ")"),
                Estimate = round(OR, digits = 2),
                `P value`   = round(pval, digits = 2),
                Instruments = as.character(instruments),
                num = 1)
# Colors for the plot
colp <- "#1D5197"
coll <- "#a7a9ac"

k <- nrow(dat)

### generate point sizes
psize <- 1.2

### get the weights and format them as will be used in the forest plot
weights <- 1

png(filename=here::here("Figures/figure2.png"), width=16, height=6, units = "cm", res = 600)

### adjust the margins
par(mai = c(.5,0,0,0),  mgp = c(3,-.1,0), tcl=0.15)

### forest plot with extra annotation
p <- metafor::forest(dat$OR, ci.lb = dat$cilow, ci.ub = dat$cihigh,
                     lty=c(1,0), annotate = TRUE, xlim = c(0.05,1.7), 
                     alim = c(0.8, 1.1), ylim = c(0.9, k + 0.8), 
                     cex.axis = 0.7, cex = 0.95, xlab = "", efac = 0,
                     refline = NA, rowadj = -1, 
                     ilab = cbind(dat$Study, "54,162", "17,008 (31)" , 
                                  dat$`Estimate (95% CI)`, dat$`P value`),
                     at = c(0.8,0.9,1,1.1),
                     ilab.xpos = c(0.15, 0.4, 0.65, 1.3, 1.55))
segments(x0 = 1, x1 = 1, y0 = -1, y1 = 1.15, col = coll) # Reference line at 1
segments(dat$cilow, 1, dat$cihigh, 1, col=colp, lwd=1.5)
points(dat$OR, 1, cex=0.95, col=colp, pch = 15)
abline(h=1.2, col=coll)

### add headings
par(cex=p$cex, font=2)
text(p$ilab.xpos[1], k+.3, pos = NULL, "Study")
text(p$ilab.xpos[2], k+.3, c("Sample size"))
text(p$ilab.xpos[3], k+.3, c("Cases (%)"))
text(p$ilab.xpos[4], k+.3, c("OR (95% CI)"))
text(p$ilab.xpos[5], k+.3, c("P-Value"))
par(cex=0.7, font=1)

par(xpd=NA)

# xlabel
text(1, .7, c("Odds ratio per 100mg descrease of PDE5"), pos=NULL, offset=-0.3)

file.copy(here("Figures/figure2.png"), here("Scripts/figure2.png"))
knitr::include_graphics("figure2.png")
file.remove(here("Scripts/figure2.png"))
```

**Figure 2.** Mendelian randomisation results of the main analysis.
