# Alzheimer disease gwas - Lambert
# gwasAlzD_lambert_SBP <- as_tibble(read_table(paste0(pathToData,'GWAS/AlzD_Lambert_IGAP_2013/IGAP_summary_statistics/IGAP_stage_1.txt'))) %>%
#    filter(MarkerName %in% snpsSBP$SNP)
# gwasAlzD_lambert_SBP <- gwasAlzD_lambert_SBP %>%
#   select(SNP           = "MarkerName",
#          chr           = "Chromosome",
#          pos           = "Position",
#          effect_allele = "Effect_allele",
#          other_allele  = "Non_Effect_allele",
#          pval          = "Pvalue",
#          beta          = "Beta",
#          se            = "SE")
# write.table(gwasAlzD_lambert_SBP ,'iv_AlzD_SBP.txt')
# DBP --------------------------------------------------------------------------
iv_DBP <- as_tibble(read.table('iv_DBP.txt')) %>%
format_data(type = "exposure") %>%
mutate(id.exposure = "exposure",
exposure = "exposure")
iv_Alz_DBP <- as_tibble(read.table('iv_AlzD_DBP.txt')) %>%
format_data(type = "outcome") %>%
mutate(id.outcome = "outcome",
outcome = "outcome")
a <- harmonise_data(iv_DBP,iv_Alz_DBP) %>%
summarise(SNP = SNP,
CHR = chr.outcome,
POS = pos.outcome,
'EA_exposure' = effect_allele.exposure,
'EA_outcome'  = effect_allele.outcome,
'OA_exposure' = other_allele.exposure,
'OA_outcome' = other_allele.outcome,
'EAF_exposure' = round(eaf.exposure, digits = 2),
'EAF_outcome'  = round(eaf.outcome, digits = 2),
'SE_exposure' = round(se.exposure, digits = 2),
'SE_outcome'  = round(se.outcome, digits = 2),
'PVAL_exposure' = formatC(pval.exposure, format = "e", digits = 1),
'PVAL_outcome' = pval.outcome)
write.table(a, 'DBP_AlzD_harmonised.txt')
a <- a %>%
flextable() %>%
span_header(sep = "_") %>%
align(i = 1, align = 'center', part = "header") %>%
bg(j = "EA_exposure", bg = "#EFEFEF", part = "all") %>%
bg(j = "OA_exposure", bg = "#EFEFEF", part = "body") %>%
bg(i = 2, j = 6, bg = "#EFEFEF",part = "header") %>%
bg(j = "EAF_exposure",bg = "#EFEFEF", part = "all") %>%
bg(j = "SE_exposure",bg = "#EFEFEF", part = "body") %>%
bg(i = 2, j = 10, bg = "#EFEFEF", part = "header") %>%
bg(j = "PVAL_exposure",bg = "#EFEFEF", part = "all") %>%
vline(i = 1, j = c(3:11), part = "header") %>%
vline(i = 2, j = seq(3,11,2), part = "header") %>%
vline(j = seq(3,11,2), part = "body") %>%
set_caption(Exposure = DBP, Outcome = AlzD (Lambert2013))
rm(list=ls())
pacman::p_load('dplyr','readr','here','stringr','tidyr','TwoSampleMR',
'flextable','ftExtra')
## Read gwas -------------------------------------------------------------------
pathToData <- 'C:/Users/martaa/Desktop/Projects/PDE5_AD_MendelianRandomisation/'
# Diastolic blood pressure
# gwasDBP <- as_tibble(read_table(paste0(pathToData,'GWAS/BP_Evangelou_2018/Evangelou_30224653_DBP.txt.gz'))) %>%
#   separate(MarkerName, into=c('chr','pos','Type'), sep =':') %>%
#   mutate(pos = as.numeric(pos))
# snpsDBP <- gwasDBP %>%
#   filter(chr == 4  & Type =='SNP') %>%
#   filter(pos %in% c(120423094,120502461,120416096,120532085,120509279)) %>%
#   mutate(SNP = case_when(
#     pos == 120423094 ~ "rs80223330",
#     pos == 120502461 ~ "rs12646525",
#     pos == 120416096 ~ "rs17355550",
#     pos == 120532085 ~ "rs10050092",
#     pos == 120509279 ~ "rs66887589"
#   )) %>%
#   select(SNP, chr, pos,
#          effect_allele = "Allele1",
#          other_allele  = "Allele2",
#          pval          = "P",
#          samplesize    = "N_effective",
#          beta          = "Effect",
#          se            = "StdErr",
#          eaf           = 'Freq1')
# write.table(snpsDBP,'iv_DBP.txt')
# Alzheimer disease gwas - Lambert
# gwasAlzD_lambert_DBP <- as_tibble(read_table(paste0(pathToData,'GWAS/AlzD_Lambert_IGAP_2013/IGAP_summary_statistics/IGAP_stage_1.txt'))) %>%
#   filter(MarkerName %in% snpsDBP$SNP)
# snpsAlzD_DBP <- gwasAlzD_lambert_DBP %>%
#   select(SNP           = "MarkerName",
#          chr           = "Chromosome",
#          pos           = "Position",
#          effect_allele = "Effect_allele",
#          other_allele  = "Non_Effect_allele",
#          pval          = "Pvalue",
#          beta          = "Beta",
#          se            = "SE")
# write.table(snpsAlzD_DBP,'iv_AlzD_DBP.txt')
# Sistolic blood pressure
# gwasSBP <- as_tibble(read_table(paste0(pathToData,'GWAS/BP_Evangelou_2018/Evangelou_30224653_SBP.txt.gz'))) %>%
#   separate(MarkerName, into=c('chr','pos','Type'), sep =':') %>%
#   mutate(pos = as.numeric(pos))
# snpsSBP <- gwasSBP %>%
#   filter(chr == 4  & Type =='SNP') %>%
#   filter(pos %in% c(120423094,120502461,120416096,120544112)) %>%
#   mutate(SNP = case_when(
#     pos == 120423094 ~ "rs80223330",
#     pos == 120502461 ~ "rs12646525",
#     pos == 120416096 ~ "rs17355550",
#     pos == 120544112 ~ "rs7672519"
#   )) %>%
#   select(SNP, chr, pos,
#          effect_allele = "Allele1",
#          other_allele  = "Allele2",
#          pval          = "P",
#          samplesize    = "N_effective",
#          beta          = "Effect",
#          se            = "StdErr",
#          eaf           = 'Freq1')
# write.table(snpsSBP,'iv_SBP.txt')
# Alzheimer disease gwas - Lambert
# gwasAlzD_lambert_SBP <- as_tibble(read_table(paste0(pathToData,'GWAS/AlzD_Lambert_IGAP_2013/IGAP_summary_statistics/IGAP_stage_1.txt'))) %>%
#    filter(MarkerName %in% snpsSBP$SNP)
# gwasAlzD_lambert_SBP <- gwasAlzD_lambert_SBP %>%
#   select(SNP           = "MarkerName",
#          chr           = "Chromosome",
#          pos           = "Position",
#          effect_allele = "Effect_allele",
#          other_allele  = "Non_Effect_allele",
#          pval          = "Pvalue",
#          beta          = "Beta",
#          se            = "SE")
# write.table(gwasAlzD_lambert_SBP ,'iv_AlzD_SBP.txt')
# DBP --------------------------------------------------------------------------
iv_DBP <- as_tibble(read.table('iv_DBP.txt')) %>%
format_data(type = "exposure") %>%
mutate(id.exposure = "exposure",
exposure = "exposure")
iv_Alz_DBP <- as_tibble(read.table('iv_AlzD_DBP.txt')) %>%
format_data(type = "outcome") %>%
mutate(id.outcome = "outcome",
outcome = "outcome")
a <- harmonise_data(iv_DBP,iv_Alz_DBP) %>%
summarise(SNP = SNP,
CHR = chr.outcome,
POS = pos.outcome,
'EA_exposure' = effect_allele.exposure,
'EA_outcome'  = effect_allele.outcome,
'OA_exposure' = other_allele.exposure,
'OA_outcome' = other_allele.outcome,
'EAF_exposure' = round(eaf.exposure, digits = 2),
'EAF_outcome'  = round(eaf.outcome, digits = 2),
'SE_exposure' = round(se.exposure, digits = 2),
'SE_outcome'  = round(se.outcome, digits = 2),
'PVAL_exposure' = formatC(pval.exposure, format = "e", digits = 1),
'PVAL_outcome' = pval.outcome)
write.table(a, 'DBP_AlzD_harmonised.txt')
a <- a %>%
flextable() %>%
span_header(sep = "_") %>%
align(i = 1, align = 'center', part = "header") %>%
bg(j = "EA_exposure", bg = "#EFEFEF", part = "all") %>%
bg(j = "OA_exposure", bg = "#EFEFEF", part = "body") %>%
bg(i = 2, j = 6, bg = "#EFEFEF",part = "header") %>%
bg(j = "EAF_exposure",bg = "#EFEFEF", part = "all") %>%
bg(j = "SE_exposure",bg = "#EFEFEF", part = "body") %>%
bg(i = 2, j = 10, bg = "#EFEFEF", part = "header") %>%
bg(j = "PVAL_exposure",bg = "#EFEFEF", part = "all") %>%
vline(i = 1, j = c(3:11), part = "header") %>%
vline(i = 2, j = seq(3,11,2), part = "header") %>%
vline(j = seq(3,11,2), part = "body") %>%
set_caption("Exposure = DBP, Outcome = AlzD (Lambert2013)")
save_as_image(a, here('iv_DBP.png'), expand = 10, res = 300)
# SBP --------------------------------------------------------------------------
iv_SBP <- as_tibble(read.table('iv_SBP.txt')) %>%
format_data(type = "exposure") %>%
mutate(id.exposure = "exposure",
exposure = "exposure")
iv_Alz_SBP <- as_tibble(read.table('iv_AlzD_SBP.txt')) %>%
format_data(type = "outcome") %>%
mutate(id.outcome = "outcome",
outcome = "outcome")
a <- harmonise_data(iv_SBP,iv_Alz_SBP) %>%
summarise(SNP = SNP,
CHR = chr.outcome,
POS = pos.outcome,
'EA_exposure' = effect_allele.exposure,
'EA_outcome'  = effect_allele.outcome,
'OA_exposure' = other_allele.exposure,
'OA_outcome' = other_allele.outcome,
'EAF_exposure' = round(eaf.exposure, digits = 2),
'EAF_outcome'  = round(eaf.outcome, digits = 2),
'SE_exposure' = round(se.exposure, digits = 2),
'SE_outcome'  = round(se.outcome, digits = 2),
'PVAL_exposure' = formatC(pval.exposure, format = "e", digits = 1),
'PVAL_outcome' = pval.outcome)
write.table(a, 'SBP_AlzD_harmonised.txt')
a <- a %>%
flextable() %>%
span_header(sep = "_") %>%
align(i = 1, align = 'center', part = "header") %>%
bg(j = "EA_exposure", bg = "#EFEFEF", part = "all") %>%
bg(j = "OA_exposure", bg = "#EFEFEF", part = "body") %>%
bg(i = 2, j = 6, bg = "#EFEFEF",part = "header") %>%
bg(j = "EAF_exposure",bg = "#EFEFEF", part = "all") %>%
bg(j = "SE_exposure",bg = "#EFEFEF", part = "body") %>%
bg(i = 2, j = 10, bg = "#EFEFEF", part = "header") %>%
bg(j = "PVAL_exposure",bg = "#EFEFEF", part = "all") %>%
vline(i = 1, j = c(3:11), part = "header") %>%
vline(i = 2, j = seq(3,11,2), part = "header") %>%
vline(j = seq(3,11,2), part = "body") %>%
set_caption("Exposure = SBP, Outcome = AlzD (Lambert2013)")
save_as_image(a, here('iv_SBP.png'), expand = 10, res = 300)
pacman::p_load('readr')
dbp <- read_table('DBP_AlzD_harmonised.txt')
dbp
dbp <- readtable('DBP_AlzD_harmonised.txt')
dbp <- read.table('DBP_AlzD_harmonised.txt')
dbp
devtools::install_github("bar-woolf/TwoStepCisMR")
pacman::p_load('readr','devtools')
devtools::install_github("bar-woolf/TwoStepCisMR")
library(TwoStepCisMR)
read.table(C:/Users/martaa/Desktop/Projects/PDE5_AD_MendelianRandomisation/GWAS/Confounders/ukb-b-19953.vcf)
read.table("C:/Users/martaa/Desktop/Projects/PDE5_AD_MendelianRandomisation/GWAS/Confounders/ukb-b-19953.vcf")
read.table("C:/Users/martaa/Desktop/Projects/PDE5_AD_MendelianRandomisation/GWAS/Confounders/ukb-b-19953.vcf.gz")
conf <- extract_outcome_data(dbp$SNP,"ukb-b-19953", proxies = F)
conf
exp <- read.table('iv_DBP.txt')
out <- read.table('iv_AlzD_DBP.txt')
conf <- extract_outcome_data(dbp$SNP,"ukb-b-19953", proxies = F)
conf_exp <- harmonise_data(exp,conf, proxies = F)
conf_exp <- harmonise_data(exp,conf)
exp
exp <- read.table('iv_DBP.txt') %>%
mutate(id.exposure = 'exposure',
exposure = 'exposure') %>%
rename(beta.exposure = beta, se.exposure = se, effect_allele.exposure = effect_allele,
other_allele.exposure = other_allele, eaf.exposure = eaf)
exp <- read.table('iv_DBP.txt') %>%
mutate(id.exposure = 'exposure',
exposure = 'exposure') %>%
rename(beta.exposure = beta, se.exposure = se, effect_allele.exposure = effect_allele,
other_allele.exposure = other_allele, eaf.exposure = eaf)
out <- read.table('iv_AlzD_DBP.txt') %>%
mutate(id.outcome = 'outcome',
outcome = 'outcome') %>%
rename(beta.outcome = beta, se.outcome = se, effect_allele.outcome = effect_allele,
other_allele.outcome = other_allele, eaf.outcome = eaf)
conf <- extract_outcome_data(dbp$SNP,"ukb-b-19953", proxies = F)
exp <- read.table('iv_DBP.txt') %>%
mutate(id.exposure = 'exposure',
exposure = 'exposure') %>%
rename(beta.exposure = beta, se.exposure = se, effect_allele.exposure = effect_allele,
other_allele.exposure = other_allele, eaf.exposure = eaf)
out <- read.table('iv_AlzD_DBP.txt') %>%
mutate(id.outcome = 'outcome',
outcome = 'outcome') %>%
rename(beta.outcome = beta, se.outcome = se, effect_allele.outcome = effect_allele,
other_allele.outcome = other_allele)
conf <- extract_outcome_data(dbp$SNP,"ukb-b-19953", proxies = F)
conf_exp <- harmonise_data(exp,conf)
out_exp  <- harmonise_data(exp,out)
#Two-step MR
rm(list = ls())
pacman::p_load('readr','devtools')
devtools::install_github("bar-woolf/TwoStepCisMR")
library(TwoStepCisMR)
exp <- read.table('iv_DBP.txt') %>%
mutate(id.exposure = 'exposure',
exposure = 'exposure') %>%
rename(beta.exposure = beta, se.exposure = se, effect_allele.exposure = effect_allele,
other_allele.exposure = other_allele, eaf.exposure = eaf)
pacman::p_load('readr','devtools','dplyr')
devtools::install_github("bar-woolf/TwoStepCisMR")
library(TwoStepCisMR)
exp <- read.table('iv_DBP.txt') %>%
mutate(id.exposure = 'exposure',
exposure = 'exposure') %>%
rename(beta.exposure = beta, se.exposure = se, effect_allele.exposure = effect_allele,
other_allele.exposure = other_allele, eaf.exposure = eaf)
out <- read.table('iv_AlzD_DBP.txt') %>%
mutate(id.outcome = 'outcome',
outcome = 'outcome') %>%
rename(beta.outcome = beta, se.outcome = se, effect_allele.outcome = effect_allele,
other_allele.outcome = other_allele)
conf <- extract_outcome_data(dbp$SNP,"ukb-b-19953", proxies = F)
pacman::p_load('readr','devtools','dplyr','TwoSampleMR')
exp <- read.table('iv_DBP.txt') %>%
mutate(id.exposure = 'exposure',
exposure = 'exposure') %>%
rename(beta.exposure = beta, se.exposure = se, effect_allele.exposure = effect_allele,
other_allele.exposure = other_allele, eaf.exposure = eaf)
out <- read.table('iv_AlzD_DBP.txt') %>%
mutate(id.outcome = 'outcome',
outcome = 'outcome') %>%
rename(beta.outcome = beta, se.outcome = se, effect_allele.outcome = effect_allele,
other_allele.outcome = other_allele)
conf <- extract_outcome_data(dbp$SNP,"ukb-b-19953", proxies = F)
conf <- extract_outcome_data(exp$SNP,"ukb-b-19953", proxies = F)
conf_exp <- harmonise_data(exp,conf)
out_exp  <- harmonise_data(exp,out)
out
out_exp
out
out <- read.table('iv_AlzD_DBP.txt') %>%
mutate(id.outcome = 'outcome',
outcome = 'outcome') %>%
rename(beta.outcome = beta, se.outcome = se, effect_allele.outcome = effect_allele,
other_allele.outcome = other_allele, eaf.outcome = NA)
out <- read.table('iv_AlzD_DBP.txt') %>%
mutate(id.outcome = 'outcome',
outcome = 'outcome') %>%
rename(beta.outcome = beta, se.outcome = se, effect_allele.outcome = effect_allele,
other_allele.outcome = other_allele, eaf.outcome = NA)
out <- read.table('iv_AlzD_DBP.txt') %>%
mutate(id.outcome = 'outcome',
outcome = 'outcome',
eaf.outcome = NA) %>%
rename(beta.outcome = beta, se.outcome = se, effect_allele.outcome = effect_allele,
other_allele.outcome = other_allele)
out_exp  <- harmonise_data(exp,out)
## Confounder outcomes associations
conf1 <- extract_instruments(outcomes = "ukb-b-19953", p1 = 5e-08, clump = TRUE, p2 = 5e-08, r2 = 0.001, kb = 10000,
access_token = ieugwasr::check_access_token(), force_server = FALSE)
print(conf1$id.exposure[1])
conf1
out1 <- as_tibble(read_table(paste0(pathToData,'GWAS/AlzD_Lambert_IGAP_2013/IGAP_summary_statistics/IGAP_stage_1.txt'))) %>%
select(SNP           = "MarkerName",
chr           = "Chromosome",
pos           = "Position",
effect_allele = "Effect_allele",
other_allele  = "Non_Effect_allele",
pval          = "Pvalue",
beta          = "Beta",
se            = "SE")
pathToData <- 'C:/Users/martaa/Desktop/Projects/PDE5_AD_MendelianRandomisation/'
out1 <- as_tibble(read_table(paste0(pathToData,'GWAS/AlzD_Lambert_IGAP_2013/IGAP_summary_statistics/IGAP_stage_1.txt'))) %>%
select(SNP           = "MarkerName",
chr           = "Chromosome",
pos           = "Position",
effect_allele = "Effect_allele",
other_allele  = "Non_Effect_allele",
pval          = "Pvalue",
beta          = "Beta",
se            = "SE")
as_tibble(conf1)
colnames(conf1)
out1 <- as_tibble(read_table(paste0(pathToData,'GWAS/AlzD_Lambert_IGAP_2013/IGAP_summary_statistics/IGAP_stage_1.txt'))) %>%
select(SNP           = "MarkerName",
chr.outcome   = "Chromosome",
pos.outcome   = "Position",
effect_allele.outcome = "Effect_allele",
other_allele.outcome  = "Non_Effect_allele",
pval.outcome          = "Pvalue",
beta.outcome          = "Beta",
se.outcome            = "SE")
out11 <- read_outcome_data(out1)
as_tibble(read_outcome_data(paste0(pathToData,'GWAS/AlzD_Lambert_IGAP_2013/IGAP_summary_statistics/IGAP_stage_1.txt')))
out1 <- read_outcome_data(paste0(pathToData,'GWAS/AlzD_Lambert_IGAP_2013/IGAP_summary_statistics/IGAP_stage_1.txt'),
snp_col = "MarkerName",
beta_col = "Beta",
se_col = "SE",
pval_col = Pvalue,
effect_allele_col = "Effect_allele",
other_allele_col  = "Non_Effect_allele",
pos_col = "pos",
chr_col = "chr")
out1 <- read_outcome_data(paste0(pathToData,'GWAS/AlzD_Lambert_IGAP_2013/IGAP_summary_statistics/IGAP_stage_1.txt'),
snp_col = "MarkerName",
beta_col = "Beta",
se_col = "SE",
pval_col = "Pvalue",
effect_allele_col = "Effect_allele",
other_allele_col  = "Non_Effect_allele",
pos_col = "pos",
chr_col = "chr")
out1 <- read_outcome_data(paste0(pathToData,'GWAS/AlzD_Lambert_IGAP_2013/IGAP_summary_statistics/IGAP_stage_1.txt'),
snps = NULL,
snp_col = "MarkerName",
beta_col = "Beta",
se_col = "SE",
pval_col = "Pvalue",
effect_allele_col = "Effect_allele",
other_allele_col  = "Non_Effect_allele",
pos_col = "pos",
chr_col = "chr")
out1 <- read_outcome_data(paste0(pathToData,'GWAS/AlzD_Lambert_IGAP_2013/IGAP_summary_statistics/IGAP_stage_1.txt'),
snps = NULL, type = "outcome",
snp_col = "MarkerName",
beta_col = "Beta",
se_col = "SE",
pval_col = "Pvalue",
effect_allele_col = "Effect_allele",
other_allele_col  = "Non_Effect_allele",
pos_col = "pos",
chr_col = "chr")
read_outcome_data(paste0(pathToData,'GWAS/AlzD_Lambert_IGAP_2013/IGAP_summary_statistics/IGAP_stage_1.txt'),
snps = NULL,
snp_col = "MarkerName",
beta_col = "Beta",
se_col = "SE",
pval_col = "Pvalue",
effect_allele_col = "Effect_allele",
other_allele_col  = "Non_Effect_allele",
pos_col = "pos",
chr_col = "chr")
out1 <- read_outcome_data(paste0(pathToData,'GWAS/AlzD_Lambert_IGAP_2013/IGAP_summary_statistics/IGAP_stage_1.txt'),
snps = NULL, sep = " ",
snp_col = "MarkerName",
beta_col = "Beta",
se_col = "SE",
pval_col = "Pvalue",
effect_allele_col = "Effect_allele",
other_allele_col  = "Non_Effect_allele",
pos_col = "pos",
chr_col = "chr")
out1 <- read_outcome_data(paste0(pathToData,'GWAS/AlzD_Lambert_IGAP_2013/IGAP_summary_statistics/IGAP_stage_1.txt'),
snps = NULL, sep = "\t",
snp_col = "MarkerName",
beta_col = "Beta",
se_col = "SE",
pval_col = "Pvalue",
effect_allele_col = "Effect_allele",
other_allele_col  = "Non_Effect_allele",
pos_col = "pos",
chr_col = "chr")
out1
available_outcomes()
mr(harmonise_data(exp,out))
out <- read.table('iv_AlzD_DBP.txt') %>%
mutate(id.outcome = 'outcome',
outcome = 'outcome') %>%
rename(beta.outcome = beta, se.outcome = se, effect_allele.outcome = effect_allele,
other_allele.outcome = other_allele)
mr(harmonise_data(exp,out))
out <- read.table('iv_AlzD_DBP.txt') %>%
mutate(id.outcome = 'outcome',
outcome = 'outcome', ,
eaf.outcome = NA) %>%
rename(beta.outcome = beta, se.outcome = se, effect_allele.outcome = effect_allele,
other_allele.outcome = other_allele)
available.outcomes() %>% filter(author %in% "Lambert")
available_outcomes() %>% filter(author %in% "Lambert")
available_outcomes() %>% filter(author %in% "Lambert")
conf_kids<- extract_outcome_data(conf1$SNP, 'ieu-a-297', proxies = T, rsq = 0.8, align_alleles = 1, palindromes = 1,
maf_threshold = 0.3, access_token = ieugwasr::check_access_token(), splitsize = 10000,
proxy_splitsize = 500)
out1 <- extract_outcome_data(conf1$SNP, 'ieu-a-297', proxies = T, rsq = 0.8, align_alleles = 1, palindromes = 1,
maf_threshold = 0.3, access_token = ieugwasr::check_access_token(), splitsize = 10000,
proxy_splitsize = 500)
conf1_out1 <- harmonise_data(conf1, out1, action=2)
conf1_out1
conf1_out1_mr <- TwoSampleMR::mr(conf1_out1, method_list=c("mr_ivw","mr_egger_regression","mr_weighted_median", "mr_weighted_mode"))
conf1_out1_mr <- merge(conf1_ou1_mr,mr_heterogeneity(conf1_out1), by=c("id.outcome", "method", "id.exposure", "outcome","exposure") , all=TRUE)
conf1_out1_mr <- TwoSampleMR::mr(conf1_out1, method_list=c("mr_ivw","mr_egger_regression","mr_weighted_median", "mr_weighted_mode"))
conf1_out1_mr
conf1_out1_mr <- merge(conf1_ou1_mr,mr_heterogeneity(conf1_out1), by=c("id.outcome", "method", "id.exposure", "outcome","exposure") , all=TRUE)
conf1_out1_mr <- merge(conf1_out1_mr,mr_heterogeneity(conf1_out1), by=c("id.outcome", "method", "id.exposure", "outcome","exposure") , all=TRUE)
dat <- exp_out
dat <- out_exp
exp <- read_exposure_data('iv_DBP.txt')
exp <- read_exposure_data('iv_DBP.txt',
beta_col = beta, se_col = se, effect_allele_col = effect_allele,
other_allele_col = other_allele, eaf_col = eaf)
exp
exp <- read_exposure_data('iv_DBP.txt',
beta_col = beta.exposure, se_col = se.exposure, effect_allele_col = effect_allele.exposure,
other_allele_col = other_allele.exposure, eaf_col = eaf.exposure)
read.table('iv_DBP.txt')
exp <- read_exposure_data('iv_DBP.txt',
beta_col = beta, se_col = se, effect_allele_col = effect_allele,
other_allele_col = other_allele, eaf_col = eaf)
exp <- read_exposure_data('iv_DBP.txt',
beta_col = "beta", se_col = "se", effect_allele_col = "effect_allele",
other_allele_col = "other_allele", eaf_col = "eaf")
exp <- read_exposure_data('iv_DBP.txt', sep= "\t"
beta_col = "beta", se_col = "se", effect_allele_col = "effect_allele",
exp <- read_exposure_data('iv_DBP.txt', sep= "\t",
beta_col = "beta", se_col = "se", effect_allele_col = "effect_allele",
other_allele_col = "other_allele", eaf_col = "eaf")
exp <- read_exposure_data('iv_DBP.txt', sep= "\t",
beta_col = "beta", se_col = "se", effect_allele_col = "effect_allele",
other_allele_col = "other_allele", eaf_col = "eaf")
exp <- read.table('iv_DBP.txt') %>%
mutate(id.exposure = 'exposure',
exposure = 'exposure') %>%
rename(beta.exposure = beta, se.exposure = se, effect_allele.exposure = effect_allele,
other_allele.exposure = other_allele, eaf.exposure = eaf)
out1 <- extract_outcome_data(conf1$SNP, 'ieu-a-297', proxies = T, rsq = 0.8, align_alleles = 1, palindromes = 1,
maf_threshold = 0.3, access_token = ieugwasr::check_access_token(), splitsize = 10000,
proxy_splitsize = 500)
out1
## Confounder outcome assoicaiton
conf <- extract_instruments(outcomes= i, p1 = 5e-08, clump = TRUE, p2 = 5e-08, r2 = 0.001, kb = 10000, access_token = ieugwasr::check_access_token(), force_server = FALSE)
i <- "ukb-b-19953"
conf_kids<- extract_outcome_data(conf$SNP, 'ieu-a-297', proxies = T, rsq = 0.8, align_alleles = 1, palindromes = 1, maf_threshold = 0.3, access_token = ieugwasr::check_access_token(), splitsize = 10000, proxy_splitsize = 500)
conf_kids<- harmonise_data(conf, conf_kids, action = 2)
## Confounder outcome assoicaiton
conf <- extract_instruments(outcomes= i, p1 = 5e-08, clump = TRUE, p2 = 5e-08, r2 = 0.001, kb = 10000, access_token = ieugwasr::check_access_token(), force_server = FALSE)
conf_kids<- extract_outcome_data(conf$SNP, 'ieu-a-297', proxies = T, rsq = 0.8, align_alleles = 1, palindromes = 1, maf_threshold = 0.3, access_token = ieugwasr::check_access_token(), splitsize = 10000, proxy_splitsize = 500)
conf_kids<- harmonise_data(conf, conf_kids, action = 2)
conf_kids_mr <- TwoSampleMR::mr(conf_kids, method_list=c("mr_ivw","mr_egger_regression","mr_weighted_median", "mr_weighted_mode"))
conf_kids_mr<-merge(conf_kids_mr,mr_heterogeneity(conf_kids), by=c("id.outcome", "method", "id.exposure", "outcome","exposure") , all=TRUE )
conf_kids_mr
TwoSampleMR::mr(conf_kids, method_list=c("mr_ivw","mr_egger_regression","mr_weighted_median", "mr_weighted_mode"))
mr_heterogeneity(conf_kids)
mr_heterogeneity(conf_kids)$Q_pval
conf_kids
conf_kids$eaf.outcome = rand()
conf_kids$eaf.outcome = runif()
conf_kids$eaf.outcome = runif(nrow(conf_kids))
mr_heterogeneity(conf_kids)
conf_kids<- extract_outcome_data(conf$SNP, 'ieu-a-297', proxies = T, rsq = 0.8, align_alleles = 1, palindromes = 1, maf_threshold = 0.3, access_token = ieugwasr::check_access_token(), splitsize = 10000, proxy_splitsize = 500)
conf_kids<- harmonise_data(conf, conf_kids, action = 2)
conf_kids_mr <- TwoSampleMR::mr(conf_kids, method_list=c("mr_ivw","mr_egger_regression","mr_weighted_median", "mr_weighted_mode"))
conf_kids_mr<- merge(conf_kids_mr,mr_heterogeneity(conf_kids), by=c("id.outcome", "method", "id.exposure", "outcome","exposure") , all=TRUE )
