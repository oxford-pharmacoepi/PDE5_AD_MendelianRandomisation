ptd <- c('AlzD_Lambert_IGAP_2013/IGAP_summary_statistics/IGAP_stage_1.txt',
'AlzD_wightman_2021_excluding_23andme/PGCALZ2ExcludingUKBand23andME_METALInverseVariance_MetaAnalysis.txt.gz',
'AlzD_deRojas_2021/Sumstats_SPIGAPUK2_20190625/Sumstats_SPIGAPUK2_20190625.txt')
beta <- numeric()
se   <- numeric()
cu   <- numeric()
cl   <- numeric()
num <- 1
for(num_gwas in c(3)){
for(j in c('DBP','SBP')){
for (jj in i){
# Snp - exposure
exp <- read.table(paste0('iv_',j,'.txt')) %>%
mutate(id.exposure = 'exposure',
exposure = 'exposure') %>%
rename(beta.exposure = beta, se.exposure = se, effect_allele.exposure = effect_allele,
other_allele.exposure = other_allele, eaf.exposure = eaf, pval.exposure = pval)
# Snp - confounder
conf <- extract_outcome_data(exp$SNP, jj, proxies = F)
conf <- harmonise_data(exp,conf)
if (length(conf$SNP) != length(exp$snp)){
exp <- exp %>% filter(SNP %in% conf$SNP)
}
# Snp - outcome
out <- read.table(paste0('iv_AlzD_',j,'_',num_gwas,'.txt')) %>%
mutate(id.outcome = 'outcome',
outcome = 'outcome',
eaf.outcome = NA) %>%
rename(beta.outcome = beta, se.outcome = se, effect_allele.outcome = effect_allele,
other_allele.outcome = other_allele, pval.outcome = pval)
out <- harmonise_data(exp, out)
# Confounder-outcome associations
# - Confounder instruments
conf_instruments <- extract_instruments(outcomes = jj, # Confounder ID
p1 = 5e-08, # Significance threshold
clump = T, # Clumping
p2 = 5e-08, # Secondary clumping threshold
r2 = 0.001, # Clumping r2 clut off
kb = 10000, # Clumping distance cutoff
access_token = ieugwasr::check_access_token(),
force_server = FALSE)
# - Confounder instruments on the outcome
out_conf_instruments <- as_tibble(read_table(paste0(pathToData,'GWAS/',ptd[num_gwas])))
if(num_gwas == 3){
out_conf_instruments <- out_conf_instruments %>%
filter(RS %in% conf_instruments$SNP) %>%
select(SNP = RS,
chr = CHR,
effect_allele.outcome = A1, other_allele.outcome = A2,
beta.outcome = Beta, se.outcome = SE, pval.outcome = P) %>%
mutate(eaf.outcome = NA, id.outcome = 'AD', outcome = 'AD')
}else if(num_gwas == 2){
out_conf_instruments <- out_conf_instruments %>%
right_join(conf_instruments %>%
select(chromosome = chr.exposure, base_pair_location = pos.exposure, SNP) %>%
mutate(chromosome = as.numeric(chromosome))) %>%
rename(effect_allele.outcome = effect_allele,
other_allele.outcome = other_allele,
beta.outcome = beta,
se.outcome = standard_error,
pvalue.outcome = p_value,
eaf.outcome = effect_allele_frequency) %>%
mutate(id.outcome = 'AD', outcome = 'AD')
}else{
out_conf_instruments <- out_conf_instruments %>%
filter(MarkerName %in% conf_instruments$SNP) %>%
rename(effect_allele.outcome = Effect_allele,
other_allele.outcome = Non_Effect_allele,
beta.outcome = Beta,
se.outcome = SE,
pvalue.outcome = Pvalue,
SNP = MarkerName) %>%
mutate(id.outcome = 'AD', outcome = 'AD', eaf.outcome = NA)
}
# - Harmonise data
conf_out <- harmonise_data(conf_instruments,out_conf_instruments, action = 2)
# - Mendelian randomisation
conf_out_mr <- TwoSampleMR::mr(conf_out,
method_list=c("mr_ivw","mr_egger_regression",
"mr_weighted_median", "mr_weighted_mode"))
# Two step mendelian randomisation
for (snp in out$SNP){ # Each one of the instruments
res <- TwoStepCisMR::TSCMR(Bgo  = out$beta.outcome[out$SNP == snp], # exp-outcome
SEgo = out$se.outcome[out$SNP == snp],
Bgc  = conf$beta.outcome[conf$SNP == snp], # exp - confounder
SEgc = conf$se.outcome[conf$SNP == snp],
Bco  = conf_out_mr$b[conf_out_mr$method == "Inverse variance weighted"], # Confounder - outcome
SEco = conf_out_mr$se[conf_out_mr$method == "Inverse variance weighted"])
out$beta.outcome[out$SNP == snp] <- res$Bgo
out$se.outcome[out$SNP == snp]   <- res$BSSE
}
IVW <- IVWcorrel(betaYG   = out$beta.outcome,
sebetaYG = out$se.outcome,
betaXG   = out$beta.exposure,
sebetaXG = out$se.exposure,
rho = ld_matrix(out$SNP))
IVW <- data.frame(IVW)
beta[num] <- exp(IVW$beta_IVWcorrel)
se[num]   <- IVW$se_IVWcorrel.random
cu[num]   <- exp(IVW$beta_IVWcorrel+1.96*IVW$se_IVWcorrel.random)
cl[num]   <- exp(IVW$beta_IVWcorrel-1.96*IVW$se_IVWcorrel.random)
num <- num + 1
}
t <- data.frame(i,OR = beta, SE = se, upper = cu, lower = cl)
write.csv(t, paste0('mr_results_twoStep_',j,'_',num_gwas,'.csv'))
beta <- numeric()
se   <- numeric()
cu   <- numeric()
cl   <- numeric()
num <- 1
}
}
for(num_gwas in c(3)){
for(j in c('DBP','SBP')){
for (jj in i){
# Snp - exposure
exp <- read.table(paste0('iv_',j,'.txt')) %>%
mutate(id.exposure = 'exposure',
exposure = 'exposure') %>%
rename(beta.exposure = beta, se.exposure = se, effect_allele.exposure = effect_allele,
other_allele.exposure = other_allele, eaf.exposure = eaf, pval.exposure = pval)
# Snp - confounder
conf <- extract_outcome_data(exp$SNP, jj, proxies = F)
conf <- harmonise_data(exp,conf)
if (length(conf$SNP) != length(exp$snp)){
exp <- exp %>% filter(SNP %in% conf$SNP)
}
# Snp - outcome
out <- read.table(paste0('iv_AlzD_',j,'_',num_gwas,'.txt')) %>%
mutate(id.outcome = 'outcome',
outcome = 'outcome',
eaf.outcome = NA) %>%
rename(beta.outcome = beta, se.outcome = se, effect_allele.outcome = effect_allele,
other_allele.outcome = other_allele, pval.outcome = pval)
out <- harmonise_data(exp, out)
# Confounder-outcome associations
# - Confounder instruments
conf_instruments <- extract_instruments(outcomes = jj, # Confounder ID
p1 = 5e-08, # Significance threshold
clump = T, # Clumping
p2 = 5e-08, # Secondary clumping threshold
r2 = 0.001, # Clumping r2 clut off
kb = 10000, # Clumping distance cutoff
access_token = ieugwasr::check_access_token(),
force_server = FALSE)
# - Confounder instruments on the outcome
out_conf_instruments <- as_tibble(read_table(paste0(pathToData,'GWAS/',ptd[num_gwas])))
if(num_gwas == 3){
out_conf_instruments <- out_conf_instruments %>%
filter(RS %in% conf_instruments$SNP) %>%
select(SNP = RS,
chr = CHR,
effect_allele.outcome = A1, other_allele.outcome = A2,
beta.outcome = Beta, se.outcome = SE, pval.outcome = P) %>%
mutate(eaf.outcome = NA, id.outcome = 'AD', outcome = 'AD')
}else if(num_gwas == 2){
out_conf_instruments <- out_conf_instruments %>%
right_join(conf_instruments %>%
select(chromosome = chr.exposure, base_pair_location = pos.exposure, SNP) %>%
mutate(chromosome = as.numeric(chromosome))) %>%
rename(effect_allele.outcome = effect_allele,
other_allele.outcome = other_allele,
beta.outcome = beta,
se.outcome = standard_error,
pvalue.outcome = p_value,
eaf.outcome = effect_allele_frequency) %>%
mutate(id.outcome = 'AD', outcome = 'AD')
}else{
out_conf_instruments <- out_conf_instruments %>%
filter(MarkerName %in% conf_instruments$SNP) %>%
rename(effect_allele.outcome = Effect_allele,
other_allele.outcome = Non_Effect_allele,
beta.outcome = Beta,
se.outcome = SE,
pvalue.outcome = Pvalue,
SNP = MarkerName) %>%
mutate(id.outcome = 'AD', outcome = 'AD', eaf.outcome = NA)
}
# - Harmonise data
conf_out <- harmonise_data(conf_instruments,out_conf_instruments, action = 2)
# - Mendelian randomisation
conf_out_mr <- TwoSampleMR::mr(conf_out,
method_list=c("mr_ivw","mr_egger_regression",
"mr_weighted_median", "mr_weighted_mode"))
# Two step mendelian randomisation
for (snp in out$SNP){ # Each one of the instruments
res <- TwoStepCisMR::TSCMR(Bgo  = out$beta.outcome[out$SNP == snp], # exp-outcome
SEgo = out$se.outcome[out$SNP == snp],
Bgc  = conf$beta.outcome[conf$SNP == snp], # exp - confounder
SEgc = conf$se.outcome[conf$SNP == snp],
Bco  = conf_out_mr$b[conf_out_mr$method == "Inverse variance weighted"], # Confounder - outcome
SEco = conf_out_mr$se[conf_out_mr$method == "Inverse variance weighted"])
out$beta.outcome[out$SNP == snp] <- res$Bgo
out$se.outcome[out$SNP == snp]   <- res$BSSE
}
IVW <- IVWcorrel(betaYG   = out$beta.outcome,
sebetaYG = out$se.outcome,
betaXG   = out$beta.exposure,
sebetaXG = out$se.exposure,
rho = ld_matrix(out$SNP))
IVW <- data.frame(IVW)
beta[num] <- exp(IVW$beta_IVWcorrel)
se[num]   <- IVW$se_IVWcorrel.random
cu[num]   <- exp(IVW$beta_IVWcorrel+1.96*IVW$se_IVWcorrel.random)
cl[num]   <- exp(IVW$beta_IVWcorrel-1.96*IVW$se_IVWcorrel.random)
num <- num + 1
}
t <- data.frame(i,OR = beta, SE = se, upper = cu, lower = cl)
write.csv(t, paste0('mr_results_twoStep_',j,'_',num_gwas,'.csv'))
beta <- numeric()
se   <- numeric()
cu   <- numeric()
cl   <- numeric()
num <- 1
}
}
# Colocalization ---------------------------------------------------------------
chr <- 4
window <- 0 #using a more stringent window for the anlysis.
gene_start <- 120415550#119494395#
gene_end <- 120550146#119628991#
chrpos <- paste0(chr, ":", gene_start - window, "-", gene_end + window)
dbp <- as_tibble(read_table(paste0(pathToData,'GWAS/BP_Evangelou_2018/Evangelou_30224653_DBP.txt.gz'))) %>%
separate(MarkerName, into=c('chr','pos','Type'), sep =':') %>%
mutate(pos = as.numeric(pos)) %>%
mutate(chr = as.numeric(chr))
sbp <- as_tibble(read_table(paste0(pathToData,'GWAS/BP_Evangelou_2018/Evangelou_30224653_SBP.txt.gz'))) %>%
separate(MarkerName, into=c('chr','pos','Type'), sep =':') %>%
mutate(pos = as.numeric(pos)) %>%
mutate(chr = as.numeric(chr))
alz <- as_tibble(read_table(paste0(pathToData,'GWAS/AlzD_wightman_2021_excluding_23andme/PGCALZ2ExcludingUKBand23andME_METALInverseVariance_MetaAnalysis.txt.gz')))
alz
dbp_chr <- dbp %>%
filter(chr == 4 & pos >= gene_start-window & pos <= gene_end+window) %>%
left_join(
alz %>% select(pos = base_pair_location, chr = chromosome),
by = c('pos','chr')
)
sbp_chr <- sbp %>%
filter(chr == 4 & pos >= gene_start-window & pos <= gene_end+window) %>%
left_join(
alz %>% select(pos = base_pair_location, chr = chromosome),
by = c('pos','chr')
)
alz_dbp <- alz %>%
right_join(dbp_chr %>% select(MarkerName = snp))
alz_dbp
alz
dbp_chr
alz_dbp <- alz %>%
right_join(dbp_chr %>% select(chromosome = chr, base_pair_location = pos))
alz_dbp
alz_sbp <- alz %>%
right_join(sbp_chr %>% select(chromosome = chr, base_pair_location = pos))
dbp_chr
dbp_list <- list(
beta = dbp_chr$Effect,
MAF  = dbp_chr$Freq1,
pvalues = dbp_chr$P,
varbeta = dbp_chr$StdErr^2,
N = dbp_chr$TotalSampleSize,
type = 'quant',
pos = dbp_chr$pos)
alz_dbp
dbp_list <- list(
beta = dbp_chr$Effect,
MAF  = dbp_chr$Freq1,
pvalues = dbp_chr$P,
varbeta = dbp_chr$StdErr^2,
N = dbp_chr$TotalSampleSize,
type = 'quant',
pos = dbp_chr$pos,
chr = dbp_chr$chr)
alz_list <- list(
beta = alz_dbp$beta,
pvalues = alz_dbp$p_value,
varbeta = alz_dbp$standard_error^2,
type = 'cc',
pos = alz_dbp$base_pair_location,
chr = chromosome
)
alz_list <- list(
beta = alz_dbp$beta,
pvalues = alz_dbp$p_value,
varbeta = alz_dbp$standard_error^2,
type = 'cc',
pos = alz_dbp$base_pair_location,
chr = chromosome
)
alz_list <- list(
beta = alz_dbp$beta,
pvalues = alz_dbp$p_value,
varbeta = alz_dbp$standard_error^2,
type = 'cc',
pos = alz_dbp$base_pair_location,
chr = alz_dbp$chromosome
)
res3 <- coloc::coloc.abf(dbp_list,alz_list)
alz_list <- list(
beta = alz_dbp$beta,
pvalues = alz_dbp$p_value,
varbeta = alz_dbp$standard_error^2,
type = 'cc',
pos = alz_dbp$base_pair_location,
chr = alz_dbp$chromosome,
snp = paste0(alz_dbp$chr,':',alz_dbp$pos
)
res3 <- coloc::coloc.abf(dbp_list,alz_list)
dbp_list <- list(
beta = dbp_chr$Effect,
MAF  = dbp_chr$Freq1,
pvalues = dbp_chr$P,
varbeta = dbp_chr$StdErr^2,
N = dbp_chr$TotalSampleSize,
type = 'quant',
pos = dbp_chr$pos,
chr = dbp_chr$chr,
snp = paste0(dbp_list$chr,':',dbp_list$pos))
alz_list <- list(
beta = alz_dbp$beta,
pvalues = alz_dbp$p_value,
varbeta = alz_dbp$standard_error^2,
type = 'cc',
pos = alz_dbp$base_pair_location,
chr = alz_dbp$chromosome,
snp = paste0(alz_dbp$chr,':',alz_dbp$pos)
)
alz_list <- list(
beta = alz_dbp$beta,
pvalues = alz_dbp$p_value,
varbeta = alz_dbp$standard_error^2,
type = 'cc',
pos = alz_dbp$base_pair_location,
chr = alz_dbp$chromosome,
snp = paste0(alz_dbp$chromosome,':',alz_dbp$base_pair_location)
)
res3 <- coloc::coloc.abf(dbp_list,alz_list)
dbp_list <- list(
beta = dbp_chr$Effect,
MAF  = dbp_chr$Freq1,
pvalues = dbp_chr$P,
varbeta = dbp_chr$StdErr^2,
N = dbp_chr$TotalSampleSize,
type = 'quant',
pos = dbp_chr$pos,
chr = dbp_chr$chr,
snp = paste0(dbp_list$chr,':',dbp_list$pos))
dbp_list <- list(
beta = dbp_chr$Effect,
MAF  = dbp_chr$Freq1,
pvalues = dbp_chr$P,
varbeta = dbp_chr$StdErr^2,
N = dbp_chr$TotalSampleSize,
type = 'quant',
pos = dbp_chr$pos,
chr = dbp_chr$chr,
snp = paste0(dbp_list$chr,':',dbp_list$pos)) %>%
unique()
alz_list <- list(
beta = alz_dbp$beta,
pvalues = alz_dbp$p_value,
varbeta = alz_dbp$standard_error^2,
type = 'cc',
pos = alz_dbp$base_pair_location,
chr = alz_dbp$chromosome,
snp = paste0(alz_dbp$chromosome,':',alz_dbp$base_pair_location)
) %>%
unique()
res3 <- coloc::coloc.abf(dbp_list,alz_list)
dbp_list <- list(
beta = dbp_chr$Effect,
MAF  = dbp_chr$Freq1,
pvalues = dbp_chr$P,
varbeta = dbp_chr$StdErr^2,
N = dbp_chr$TotalSampleSize,
type = 'quant',
pos = dbp_chr$pos,
chr = dbp_chr$chr,
snp = paste0(dbp_list$chr,':',dbp_list$pos))
alz_list <- list(
beta = alz_dbp$beta,
pvalues = alz_dbp$p_value,
varbeta = alz_dbp$standard_error^2,
type = 'cc',
pos = alz_dbp$base_pair_location,
chr = alz_dbp$chromosome,
snp = paste0(alz_dbp$chromosome,':',alz_dbp$base_pair_location)
)
res3 <- coloc::coloc.abf(dbp_list,alz_list)
dbp_list
dbp_list <- list(
beta = dbp_chr$Effect,
MAF  = dbp_chr$Freq1,
pvalues = dbp_chr$P,
varbeta = dbp_chr$StdErr^2,
N = dbp_chr$TotalSampleSize,
type = 'quant',
pos = dbp_chr$pos,
chr = dbp_chr$chr,
snp = paste0(dbp_chr$chr,':',dbp_chr$pos))
alz_list <- list(
beta = alz_dbp$beta,
pvalues = alz_dbp$p_value,
varbeta = alz_dbp$standard_error^2,
type = 'cc',
pos = alz_dbp$base_pair_location,
chr = alz_dbp$chromosome,
snp = paste0(alz_dbp$chromosome,':',alz_dbp$base_pair_location)
)
res3 <- coloc::coloc.abf(dbp_list,alz_list)
dbp_list
dbp_chr %>%
mutate(snp = paste0(dbp_chr$chr,':',dbp_chr$pos))
dbp_chr <- dbp_chr %>%
mutate(snp = paste0(dbp_chr$chr,':',dbp_chr$pos)) %>%
unique(snp)
dbp_chr %>%
mutate(snp = paste0(dbp_chr$chr,':',dbp_chr$pos))
dbp_chr %>%
mutate(snp = paste0(dbp_chr$chr,':',dbp_chr$pos)) %>%
unique(snp)
dbp_chr <- dbp_chr %>%
mutate(snp = paste0(dbp_chr$chr,':',dbp_chr$pos)) %>%
unique()
dbp_chr
dbp_list <- list(
beta = dbp_chr$Effect,
MAF  = dbp_chr$Freq1,
pvalues = dbp_chr$P,
varbeta = dbp_chr$StdErr^2,
N = dbp_chr$TotalSampleSize,
type = 'quant',
pos = dbp_chr$pos,
chr = dbp_chr$chr,
snp = dbp_chr$snp)
alz_db
alz_dbp
alz_dbp$SNPID
alz_dbp <- alz_dbp %>%
mutate(snp = paste0(alz_dbp$chromosome,':',alz_dbp$base_pair_location)) %>%
unique()
alz_list <- list(
beta = alz_dbp$beta,
pvalues = alz_dbp$p_value,
varbeta = alz_dbp$standard_error^2,
type = 'cc',
pos = alz_dbp$base_pair_location,
chr = alz_dbp$chromosome,
snp = alz_dbp$snp
)
res3 <- coloc::coloc.abf(dbp_list,alz_list)
alz_dbp <- alz_dbp %>%
mutate(snp = paste0(alz_dbp$chromosome,':',alz_dbp$base_pair_location)) %>%
unique()
dbp_list <- list(
beta = dbp_chr$Effect,
MAF  = dbp_chr$Freq1,
pvalues = dbp_chr$P,
varbeta = dbp_chr$StdErr^2,
N = dbp_chr$TotalSampleSize,
type = 'quant',
pos = dbp_chr$pos,
chr = dbp_chr$chr,
snp = dbp_chr$snp)
alz_dbp <- alz_dbp %>%
mutate(snp = paste0(alz_dbp$chromosome,':',alz_dbp$base_pair_location)) %>%
unique()
alz_list <- list(
beta = alz_dbp$beta,
pvalues = alz_dbp$p_value,
varbeta = alz_dbp$standard_error^2,
type = 'cc',
pos = alz_dbp$base_pair_location,
chr = alz_dbp$chromosome,
snp = alz_dbp$snp
)
res3 <- coloc::coloc.abf(dbp_list,alz_list)
alz_dbp <- alz_dbp %>%
mutate(snp = paste0(alz_dbp$chromosome,':',alz_dbp$base_pair_location)) %>%
unique(snp)
alz_dbp <- alz_dbp %>%
mutate(snp = paste0(alz_dbp$chromosome,':',alz_dbp$base_pair_location)) %>%
group_by(snp) %>%
unique()
alz_list <- list(
beta = alz_dbp$beta,
pvalues = alz_dbp$p_value,
varbeta = alz_dbp$standard_error^2,
type = 'cc',
pos = alz_dbp$base_pair_location,
chr = alz_dbp$chromosome,
snp = alz_dbp$snp
)
res3 <- coloc::coloc.abf(dbp_list,alz_list)
alz_dbp %>% select(snp,SNPID)
sort(alz_dbp$snp)
alz_dbp <- alz_dbp %>%
mutate(snp = paste0(alz_dbp$chromosome,':',alz_dbp$base_pair_location)) %>%
group_by(snp) %>%
unique()
alz_dbp <- alz_dbp %>%
mutate(snp = paste0(alz_dbp$chromosome,':',alz_dbp$base_pair_location)) %>%
group_by("snp") %>%
unique()
alz_dbp <- alz_dbp %>%
mutate(snp = paste0(alz_dbp$chromosome,':',alz_dbp$base_pair_location)) %>%
unique()
alz_dbp <- alz_dbp %>%
mutate(snp = paste0(alz_dbp$chromosome,':',alz_dbp$base_pair_location)) %>%
unique()
# WIGHTMAN ---------------------------------------------------------------------
alz <- as_tibble(read_table(paste0(pathToData,'GWAS/AlzD_wightman_2021_excluding_23andme/PGCALZ2ExcludingUKBand23andME_METALInverseVariance_MetaAnalysis.txt.gz')))
