out <- harmonise_data(exp, out)
# Confounder-outcome associations
# - Confounder instruments
conf_instruments <- extract_instruments(outcomes = jj, # Confounder ID
p1 = 5e-08, # Significance threshold
clump = T, # Clumping
p2 = 5e-08, # Secondary clumping threshold
r2 = 0.001, # Clumping r2 clut off
kb = 10000, # Clumping distance cutoff
access_token = ieugwasr::check_access_token(),
force_server = FALSE)
conf_instruments <- extract_instruments(outcomes = jj, # Confounder ID
p1 = 5e-08, # Significance threshold
clump = T, # Clumping
p2 = 5e-08, # Secondary clumping threshold
r2 = 0.001, # Clumping r2 clut off
kb = 10000, # Clumping distance cutoff
access_token = ieugwasr::check_access_token(),
force_server = FALSE)
# - Confounder instruments on the outcome
out_conf_instruments <- as_tibble(read_table(paste0(pathToData,'GWAS/',ptd[num_gwas])))
if(num_gwas == 3){
out_conf_instruments <- out_conf_instruments %>%
filter(RS %in% conf_instruments$SNP) %>%
select(SNP = RS,
chr = CHR,
effect_allele.outcome = A1, other_allele.outcome = A2,
beta.outcome = Beta, se.outcome = SE, pval.outcome = P) %>%
mutate(eaf.outcome = NA, id.outcome = 'AD', outcome = 'AD')
}else if(num_gwas == 2){
out_conf_instruments <- out_conf_instruments %>%
right_join(conf_instruments %>%
select(chromosome = chr.exposure, base_pair_location = pos.exposure, SNP) %>%
mutate(chromosome = as.numeric(chromosome))) %>%
rename(effect_allele.outcome = effect_allele,
other_allele.outcome = other_allele,
beta.outcome = beta,
se.outcome = standard_error,
pvalue.outcome = p_value,
eaf.outcome = effect_allele_frequency) %>%
mutate(id.outcome = 'AD', outcome = 'AD')
}else{
out_conf_instruments <- out_conf_instruments %>%
filter(MarkerName %in% conf_instruments$SNP) %>%
rename(effect_allele.outcome = Effect_allele,
other_allele.outcome = Non_Effect_allele,
beta.outcome = Beta,
se.outcome = SE,
pvalue.outcome = Pvalue,
SNP = MarkerName) %>%
mutate(id.outcome = 'AD', outcome = 'AD', eaf.outcome = NA)
}
# - Harmonise data
conf_out <- harmonise_data(conf_instruments,out_conf_instruments, action = 2)
# - Mendelian randomisation
conf_out_mr <- TwoSampleMR::mr(conf_out,
method_list=c("mr_ivw","mr_egger_regression",
"mr_weighted_median", "mr_weighted_mode"))
# Two step mendelian randomisation
for (snp in out$SNP){ # Each one of the instruments
res <- TwoStepCisMR::TSCMR(Bgo  = out$beta.outcome[out$SNP == snp], # exp-outcome
SEgo = out$se.outcome[out$SNP == snp],
Bgc  = conf$beta.outcome[conf$SNP == snp], # exp - confounder
SEgc = conf$se.outcome[conf$SNP == snp],
Bco  = conf_out_mr$b[conf_out_mr$method == "Inverse variance weighted"], # Confounder - outcome
SEco = conf_out_mr$se[conf_out_mr$method == "Inverse variance weighted"])
out$beta.outcome[out$SNP == snp] <- res$Bgo
out$se.outcome[out$SNP == snp]   <- res$BSSE
}
IVW <- IVWcorrel(betaYG   = out$beta.outcome,
sebetaYG = out$se.outcome,
betaXG   = out$beta.exposure,
sebetaXG = out$se.exposure,
rho = ld_matrix(out$SNP))
IVW <- IVWcorrel(betaYG   = out$beta.outcome,
sebetaYG = out$se.outcome,
betaXG   = out$beta.exposure,
sebetaXG = out$se.exposure,
rho = ld_matrix(out$SNP))
IVW <- IVWcorrel(betaYG   = out$beta.outcome,
sebetaYG = out$se.outcome,
betaXG   = out$beta.exposure,
sebetaXG = out$se.exposure,
rho = ld_matrix(out$SNP))
IVW <- IVWcorrel(betaYG   = out$beta.outcome,
sebetaYG = out$se.outcome,
betaXG   = out$beta.exposure,
sebetaXG = out$se.exposure,
rho = ld_matrix(out$SNP))
IVW <- IVWcorrel(betaYG   = out$beta.outcome,
sebetaYG = out$se.outcome,
betaXG   = out$beta.exposure,
sebetaXG = out$se.exposure,
rho = ld_matrix(out$SNP))
IVW <- IVWcorrel(betaYG   = out$beta.outcome,
sebetaYG = out$se.outcome,
betaXG   = out$beta.exposure,
sebetaXG = out$se.exposure,
rho = ld_matrix(out$SNP))
IVW <- data.frame(IVW)
beta <- IVW$beta_IVWcorrel
se   <- IVW$se_IVWcorrel.random
write.xlsx(data.frame(study = jj, Beta = beta, SE = se),
paste0('mr_results_twoStep_',j,'_',num_gwas,'.xlsx'),
append = TRUE, sheetName = as.character(num))
# write.csv(data.frame(jj,Beta = beta, SE = se),
#           paste0('mr_results_twoStep_',j,'_',num_gwas,'.csv'))
num <- num + 1
jj
jj <- 'ebi-a-GCST004620'
# Snp - exposure
exp <- read.table(paste0('iv_',j,'.txt')) %>%
mutate(id.exposure = 'exposure',
exposure = 'exposure') %>%
rename(beta.exposure = beta, se.exposure = se, effect_allele.exposure = effect_allele,
other_allele.exposure = other_allele, eaf.exposure = eaf, pval.exposure = pval)
# Snp - confounder
conf <- extract_outcome_data(exp$SNP, jj, proxies = F)
conf <- extract_outcome_data(exp$SNP, jj, proxies = F)
conf <- extract_outcome_data(exp$SNP, jj, proxies = F)
conf <- harmonise_data(exp,conf)
if (length(conf$SNP) != length(exp$snp)){
exp <- exp %>% filter(SNP %in% conf$SNP)
}
# Snp - outcome
out <- read.table(paste0('iv_AlzD_',j,'_',num_gwas,'.txt')) %>%
mutate(id.outcome = 'outcome',
outcome = 'outcome',
eaf.outcome = NA) %>%
rename(beta.outcome = beta, se.outcome = se, effect_allele.outcome = effect_allele,
other_allele.outcome = other_allele, pval.outcome = pval)
out <- harmonise_data(exp, out)
# Confounder-outcome associations
# - Confounder instruments
conf_instruments <- extract_instruments(outcomes = jj, # Confounder ID
p1 = 5e-08, # Significance threshold
clump = T, # Clumping
p2 = 5e-08, # Secondary clumping threshold
r2 = 0.001, # Clumping r2 clut off
kb = 10000, # Clumping distance cutoff
access_token = ieugwasr::check_access_token(),
force_server = FALSE)
conf_instruments <- extract_instruments(outcomes = jj, # Confounder ID
p1 = 5e-08, # Significance threshold
clump = T, # Clumping
p2 = 5e-08, # Secondary clumping threshold
r2 = 0.001, # Clumping r2 clut off
kb = 10000, # Clumping distance cutoff
access_token = ieugwasr::check_access_token(),
force_server = FALSE)
# Confounder-outcome associations
# - Confounder instruments
conf_instruments <- extract_instruments(outcomes = jj, # Confounder ID
p1 = 5e-08, # Significance threshold
clump = T, # Clumping
p2 = 5e-08, # Secondary clumping threshold
r2 = 0.001, # Clumping r2 clut off
kb = 10000, # Clumping distance cutoff
access_token = ieugwasr::check_access_token(),
force_server = FALSE)
conf_instruments <- extract_instruments(outcomes = jj, # Confounder ID
p1 = 5e-08, # Significance threshold
clump = T, # Clumping
p2 = 5e-08, # Secondary clumping threshold
r2 = 0.001, # Clumping r2 clut off
kb = 10000, # Clumping distance cutoff
access_token = ieugwasr::check_access_token(),
force_server = FALSE)
conf_instruments <- extract_instruments(outcomes = jj, # Confounder ID
p1 = 5e-08, # Significance threshold
clump = T, # Clumping
p2 = 5e-08, # Secondary clumping threshold
r2 = 0.001, # Clumping r2 clut off
kb = 10000, # Clumping distance cutoff
access_token = ieugwasr::check_access_token(),
force_server = FALSE)
conf_instruments <- extract_instruments(outcomes = jj, # Confounder ID
p1 = 5e-08, # Significance threshold
clump = T, # Clumping
p2 = 5e-08, # Secondary clumping threshold
r2 = 0.001, # Clumping r2 clut off
kb = 10000, # Clumping distance cutoff
access_token = ieugwasr::check_access_token(),
force_server = FALSE)
# - Confounder instruments on the outcome
out_conf_instruments <- as_tibble(read_table(paste0(pathToData,'GWAS/',ptd[num_gwas])))
if(num_gwas == 3){
out_conf_instruments <- out_conf_instruments %>%
filter(RS %in% conf_instruments$SNP) %>%
select(SNP = RS,
chr = CHR,
effect_allele.outcome = A1, other_allele.outcome = A2,
beta.outcome = Beta, se.outcome = SE, pval.outcome = P) %>%
mutate(eaf.outcome = NA, id.outcome = 'AD', outcome = 'AD')
}else if(num_gwas == 2){
out_conf_instruments <- out_conf_instruments %>%
right_join(conf_instruments %>%
select(chromosome = chr.exposure, base_pair_location = pos.exposure, SNP) %>%
mutate(chromosome = as.numeric(chromosome))) %>%
rename(effect_allele.outcome = effect_allele,
other_allele.outcome = other_allele,
beta.outcome = beta,
se.outcome = standard_error,
pvalue.outcome = p_value,
eaf.outcome = effect_allele_frequency) %>%
mutate(id.outcome = 'AD', outcome = 'AD')
}else{
out_conf_instruments <- out_conf_instruments %>%
filter(MarkerName %in% conf_instruments$SNP) %>%
rename(effect_allele.outcome = Effect_allele,
other_allele.outcome = Non_Effect_allele,
beta.outcome = Beta,
se.outcome = SE,
pvalue.outcome = Pvalue,
SNP = MarkerName) %>%
mutate(id.outcome = 'AD', outcome = 'AD', eaf.outcome = NA)
}
# - Harmonise data
conf_out <- harmonise_data(conf_instruments,out_conf_instruments, action = 2)
# - Mendelian randomisation
conf_out_mr <- TwoSampleMR::mr(conf_out,
method_list=c("mr_ivw","mr_egger_regression",
"mr_weighted_median", "mr_weighted_mode"))
# Two step mendelian randomisation
for (snp in out$SNP){ # Each one of the instruments
res <- TwoStepCisMR::TSCMR(Bgo  = out$beta.outcome[out$SNP == snp], # exp-outcome
SEgo = out$se.outcome[out$SNP == snp],
Bgc  = conf$beta.outcome[conf$SNP == snp], # exp - confounder
SEgc = conf$se.outcome[conf$SNP == snp],
Bco  = conf_out_mr$b[conf_out_mr$method == "Inverse variance weighted"], # Confounder - outcome
SEco = conf_out_mr$se[conf_out_mr$method == "Inverse variance weighted"])
out$beta.outcome[out$SNP == snp] <- res$Bgo
out$se.outcome[out$SNP == snp]   <- res$BSSE
}
IVW <- IVWcorrel(betaYG   = out$beta.outcome,
sebetaYG = out$se.outcome,
betaXG   = out$beta.exposure,
sebetaXG = out$se.exposure,
rho = ld_matrix(out$SNP))
IVW <- IVWcorrel(betaYG   = out$beta.outcome,
sebetaYG = out$se.outcome,
betaXG   = out$beta.exposure,
sebetaXG = out$se.exposure,
rho = ld_matrix(out$SNP))
IVW <- data.frame(IVW)
beta <- IVW$beta_IVWcorrel
se   <- IVW$se_IVWcorrel.random
write.xlsx(data.frame(study = jj, Beta = beta, SE = se),
paste0('mr_results_twoStep_',j,'_',num_gwas,'.xlsx'),
append = TRUE, sheetName = as.character(num))
rm(list = ls())
pacman::p_load('readr','devtools','dplyr','TwoSampleMR','LDlinkR','forestplot','tidyr','coloc',
'here')
devtools::install_github("bar-woolf/TwoStepCisMR")
library(TwoStepCisMR)
pathToData <- 'C:/Users/marta/Desktop/PDE5_AD_MendelianRandomisation/'
# Functions --------------------------------------------------------------------
mh <- function(outcome, dbp, sbp, col = "black"){
p1 <- ggplot(outcome,aes(x = pos, y = -log10(pval))) +
geom_point(show.legend = FALSE, colour = col) +
labs(x = "", y = bquote(-log[10](italic(p))),
title = "Alzheimer disease") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)) +
scale_x_continuous(breaks = c(120420000, 120450000, 120480000, 120520000,120550000),
labels = c(120420, 120450, 120480,120520,120550)) +
labs(x = "Chromosome 4 Position (Kb)", y = bquote(-log[10](italic(p))))
p3 <-ggplot(dbp,aes(x = pos, y = -log10(pval))) +
geom_point(show.legend = FALSE) +
labs(x = "", y = bquote(-log[10](italic(p))),
title = "Diastolic blood pressure") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)) +
scale_x_continuous(breaks = c(120420000, 120450000, 120480000, 120520000,120550000),
labels = c(120420, 120450, 120480,120520,120550)) +
labs(x = "Chromosome 4 Position (Kb)", y = bquote(-log[10](italic(p))))
p4 <-ggplot(sbp,aes(x = pos, y = -log10(pval))) +
geom_point(show.legend = FALSE) +
labs(x = "", y = bquote(-log[10](italic(p))),
title = "Systolic blood pressure") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)) +
scale_x_continuous(breaks = c(120420000, 120450000, 120480000, 120520000,120550000),
labels = c(120420, 120450, 120480,120520,120550)) +
labs(x = "Chromosome 4 Position (Kb)", y = bquote(-log[10](italic(p))))
return(list(p1,p3,p4))
}
createList <- function(d,tip){
x <- list(
beta = d$beta,
MAF  = d$eaf,
pvalues = d$pval,
varbeta = d$se^2,
N = d$n,
type = tip,
pos = d$pos,
chr = d$chr,
snp = d$snp
)
}
# Colocalization ---------------------------------------------------------------
chr <- 4
window <- 0 #using a more stringent window for the anlysis.
gene_start <- 120415550#119494395#
gene_end <- 120550146#119628991#
chrpos <- paste0(chr, ":", gene_start - window, "-", gene_end + window)
#   mutate(pos = as.numeric(pos)) %>%
#   mutate(chr = as.numeric(chr)) %>%
#   select(chr,pos,eaf = Freq1, beta = Effect, se = StdErr, pval = P, n = TotalSampleSize)
# write.table(dbp,'dbp_colocalisation.txt')
# sbp <- as_tibble(read_table(paste0(pathToData,'GWAS/BP_Evangelou_2018/Evangelou_30224653_SBP.txt.gz'))) %>%
#   separate(MarkerName, into=c('chr','pos','Type'), sep =':') %>%
#   mutate(pos = as.numeric(pos)) %>%
#   mutate(chr = as.numeric(chr)) %>%
#   select(chr,pos,eaf = Freq1, beta = Effect, se = StdErr, pval = P, n = TotalSampleSize)
# write.table(sbp,'sbp_colocalisation.txt')
dbp <- read.table('dbp_colocalisation.txt')
sbp <- read.table('sbp_colocalisation.txt')
# WIGHTMAN ---------------------------------------------------------------------
# alz <- as_tibble(read_table(paste0(pathToData,'GWAS/AlzD_wightman_2021_excluding_23andme/PGCALZ2ExcludingUKBand23andME_METALInverseVariance_MetaAnalysis.txt.gz')))
# alz <- alz %>% filter(chromosome == 4) %>%
#    select(chr = chromosome, pos = base_pair_location, beta, se = standard_error, eaf = effect_allele_frequency,
#    pval = p_value, n = N)
# write.table(alz,'wightman_colocalisation.txt')
alz <- read.table('wightman_colocalisation.txt')
dbp <-  dbp %>%
filter(chr == 4 & pos >= gene_start-window & pos <= gene_end+window)
sbp <- sbp %>%
filter(chr == 4 & pos >= gene_start-window & pos <= gene_end+window)
alz <- alz %>%
filter(chr == 4 & pos >= gene_start-window & pos <= gene_end+window)
snp_col <- dbp %>% select(chr, pos) %>%
inner_join(sbp %>% select(chr,pos)) %>%
inner_join(alz %>% select(chr,pos)) %>%
mutate(snp = paste0(chr,':',pos)) %>%
unique()
dbp_list <- createList(dbp %>% right_join(snp_col), tip = 'quant')
sbp_list <- createList(sbp %>% right_join(snp_col), tip = 'quant')
alz_list <- createList(alz %>% right_join(snp_col) %>% filter(pos != 120455648 & n != 74004), tip = 'cc')
res3 <- coloc::coloc.abf(dbp_list,alz_list)
res4 <- coloc::coloc.abf(sbp_list,alz_list)
p <- mh(alz, dbp, sbp, col = "#EFBA00")
ggsave(here('Figures','mh_Wightman.png'),p[[1]],width = 15, height = 7, units = 'cm', dpi = 300)
ggsave(here('Figures','mh_Wightman_dbp.png'),p[[2]],width = 15, height = 7, units = 'cm', dpi = 300)
ggsave(here('Figures','mh_Wightman_sbp.png'),p[[3]],width = 15, height = 7, units = 'cm', dpi = 300)
pacman::p_load('readr','devtools','dplyr','TwoSampleMR','LDlinkR','forestplot','tidyr','coloc',
'here','ggplot2')
devtools::install_github("bar-woolf/TwoStepCisMR")
library(TwoStepCisMR)
pathToData <- 'C:/Users/marta/Desktop/PDE5_AD_MendelianRandomisation/'
# Functions --------------------------------------------------------------------
mh <- function(outcome, dbp, sbp, col = "black"){
p1 <- ggplot(outcome,aes(x = pos, y = -log10(pval))) +
geom_point(show.legend = FALSE, colour = col) +
labs(x = "", y = bquote(-log[10](italic(p))),
title = "Alzheimer disease") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)) +
scale_x_continuous(breaks = c(120420000, 120450000, 120480000, 120520000,120550000),
labels = c(120420, 120450, 120480,120520,120550)) +
labs(x = "Chromosome 4 Position (Kb)", y = bquote(-log[10](italic(p))))
p3 <-ggplot(dbp,aes(x = pos, y = -log10(pval))) +
geom_point(show.legend = FALSE) +
labs(x = "", y = bquote(-log[10](italic(p))),
title = "Diastolic blood pressure") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)) +
scale_x_continuous(breaks = c(120420000, 120450000, 120480000, 120520000,120550000),
labels = c(120420, 120450, 120480,120520,120550)) +
labs(x = "Chromosome 4 Position (Kb)", y = bquote(-log[10](italic(p))))
p4 <-ggplot(sbp,aes(x = pos, y = -log10(pval))) +
geom_point(show.legend = FALSE) +
labs(x = "", y = bquote(-log[10](italic(p))),
title = "Systolic blood pressure") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)) +
scale_x_continuous(breaks = c(120420000, 120450000, 120480000, 120520000,120550000),
labels = c(120420, 120450, 120480,120520,120550)) +
labs(x = "Chromosome 4 Position (Kb)", y = bquote(-log[10](italic(p))))
return(list(p1,p3,p4))
}
createList <- function(d,tip){
x <- list(
beta = d$beta,
MAF  = d$eaf,
pvalues = d$pval,
varbeta = d$se^2,
N = d$n,
type = tip,
pos = d$pos,
chr = d$chr,
snp = d$snp
)
}
# Colocalization ---------------------------------------------------------------
chr <- 4
window <- 0 #using a more stringent window for the anlysis.
gene_start <- 120415550#119494395#
gene_end <- 120550146#119628991#
chrpos <- paste0(chr, ":", gene_start - window, "-", gene_end + window)
#   mutate(pos = as.numeric(pos)) %>%
#   mutate(chr = as.numeric(chr)) %>%
#   select(chr,pos,eaf = Freq1, beta = Effect, se = StdErr, pval = P, n = TotalSampleSize)
# write.table(dbp,'dbp_colocalisation.txt')
# sbp <- as_tibble(read_table(paste0(pathToData,'GWAS/BP_Evangelou_2018/Evangelou_30224653_SBP.txt.gz'))) %>%
#   separate(MarkerName, into=c('chr','pos','Type'), sep =':') %>%
#   mutate(pos = as.numeric(pos)) %>%
#   mutate(chr = as.numeric(chr)) %>%
#   select(chr,pos,eaf = Freq1, beta = Effect, se = StdErr, pval = P, n = TotalSampleSize)
# write.table(sbp,'sbp_colocalisation.txt')
dbp <- read.table('dbp_colocalisation.txt')
sbp <- read.table('sbp_colocalisation.txt')
# WIGHTMAN ---------------------------------------------------------------------
# alz <- as_tibble(read_table(paste0(pathToData,'GWAS/AlzD_wightman_2021_excluding_23andme/PGCALZ2ExcludingUKBand23andME_METALInverseVariance_MetaAnalysis.txt.gz')))
# alz <- alz %>% filter(chromosome == 4) %>%
#    select(chr = chromosome, pos = base_pair_location, beta, se = standard_error, eaf = effect_allele_frequency,
#    pval = p_value, n = N)
# write.table(alz,'wightman_colocalisation.txt')
alz <- read.table('wightman_colocalisation.txt')
dbp <-  dbp %>%
filter(chr == 4 & pos >= gene_start-window & pos <= gene_end+window)
sbp <- sbp %>%
filter(chr == 4 & pos >= gene_start-window & pos <= gene_end+window)
alz <- alz %>%
filter(chr == 4 & pos >= gene_start-window & pos <= gene_end+window)
snp_col <- dbp %>% select(chr, pos) %>%
inner_join(sbp %>% select(chr,pos)) %>%
inner_join(alz %>% select(chr,pos)) %>%
mutate(snp = paste0(chr,':',pos)) %>%
unique()
dbp_list <- createList(dbp %>% right_join(snp_col), tip = 'quant')
sbp_list <- createList(sbp %>% right_join(snp_col), tip = 'quant')
alz_list <- createList(alz %>% right_join(snp_col) %>% filter(pos != 120455648 & n != 74004), tip = 'cc')
res3 <- coloc::coloc.abf(dbp_list,alz_list)
res4 <- coloc::coloc.abf(sbp_list,alz_list)
p <- mh(alz, dbp, sbp, col = "#EFBA00")
ggsave(here('Figures','mh_Wightman.png'),p[[1]],width = 15, height = 7, units = 'cm', dpi = 300)
ggsave(here('Figures','mh_Wightman_dbp.png'),p[[2]],width = 15, height = 7, units = 'cm', dpi = 300)
ggsave(here('Figures','mh_Wightman_sbp.png'),p[[3]],width = 15, height = 7, units = 'cm', dpi = 300)
coloc::coloc.abf(dbp_list,alz_list)
rm(list = ls())
pacman::p_load('readr','devtools','dplyr','TwoSampleMR','LDlinkR','forestplot','tidyr','xlsx')
devtools::install_github("bar-woolf/TwoStepCisMR")
library(TwoStepCisMR)
pathToData <- 'C:/Users/marta/Desktop/PDE5_AD_MendelianRandomisation/'
dec <- c(-5.5,-8.4)
num_gwas <- 3
num_gwas <- 2
# Mendelian randomisation ------------------------------------------------------
beta <- numeric()
se   <- numeric()
cu   <- numeric()
cl   <- numeric()
p    <- numeric()
j <- 1
i <- 'DBP'
# Snp - exposure
exp <- read.table(paste0('iv_',i,'.txt')) %>%
mutate(id.exposure = 'exposure',
exposure = 'exposure') %>%
rename(beta.exposure = beta, se.exposure = se, effect_allele.exposure = effect_allele,
other_allele.exposure = other_allele, eaf.exposure = eaf)
# Snp - outcome
out <- read.table(paste0('iv_AlzD_',i,'_',num_gwas,'.txt')) %>%
mutate(id.outcome = 'outcome',
outcome = 'outcome') %>%
rename(beta.outcome = beta, se.outcome = se, effect_allele.outcome = effect_allele,
other_allele.outcome = other_allele, eaf.outcome = eaf)
# Mendelian randomisation
dat <- harmonise_data(exp,out)
dat
res <- as.data.frame(IVWcorrel(betaYG = dat$beta.outcome,  sebetaYG = dat$se.outcome,
betaXG = dat$beta.exposure, sebetaXG = dat$se.exposure,
rho = ld_matrix(dat$SNP)))
res <- as.data.frame(IVWcorrel(betaYG = dat$beta.outcome,  sebetaYG = dat$se.outcome,
betaXG = dat$beta.exposure, sebetaXG = dat$se.exposure,
rho = ld_matrix(dat$SNP)))
res
0.005/3
0.05/3
rm(list=ls())
pacman::p_load('dplyr','readr','here','stringr','tidyr','TwoSampleMR',
'flextable','ftExtra')
## Read gwas -------------------------------------------------------------------
pathToData <- 'C:/Users/marta/Desktop/PDE5_AD_MendelianRandomisation/'
gwasDBP <- as_tibble(read_table(paste0(pathToData,'GWAS/BP_Evangelou_2018/Evangelou_30224653_DBP.txt.gz')))
gwasDBP <- gwasDBP %>%   separate(MarkerName, into=c('chr','pos','Type'), sep =':') %>%
mutate(pos = as.numeric(pos))
snpsDBP <- gwasDBP %>%
filter(chr == 4  & Type =='SNP') %>%
filter(pos %in% c(120423094,120502461,120416096,120532085,120509279)) %>%
mutate(SNP = case_when(
pos == 120423094 ~ "rs80223330",
pos == 120502461 ~ "rs12646525",
pos == 120416096 ~ "rs17355550",
pos == 120532085 ~ "rs10050092",
pos == 120509279 ~ "rs66887589"
)) %>%
select(SNP, chr, pos,
effect_allele = "Allele1",
other_allele  = "Allele2",
pval          = "P",
samplesize    = "N_effective",
beta          = "Effect",
se            = "StdErr",
eaf           = 'Freq1')
snpsDBP
write.table(snpsDBP,'iv_DBP_2.txt')
R.Version
R.Version
rm(list = ls())
R.Version()
